name: C/C++ CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: update
      run: sudo apt update
    - name: clean
      run: sudo apt clean
    - name: install_dependencies
      run: sudo apt install git wget nano gh tmate build-essential gcc-aarch64-linux-gnu g++-x86-64-linux-gnu binutils-x86-64-linux-gnu crossbuild-essential-arm64 make m4 automake autoconf libtool autotools-dev cmake  bc binutils bison dwarves flex gcc git gnupg2 gzip libelf-dev libncurses5-dev libssl-dev make openssl pahole perl-base rsync tar xz-utils zstd cpio openssh-server -y
    - name: download_kernel
      run: cd && wget https://cdn.kernel.org/pub/linux/kernel/v6.x/linux-6.11.7.tar.xz
    - name: compile_kernel
      run: cd && tar -xf linux-6.11.7.tar.xz; cd linux-6.11.7; make ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu- virtconfig -j4; make ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu- -j64>compile.log; make ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu- tarxz-pkg -j4
    - name: setup_ngrok
      run: curl -sSL https://ngrok-agent.s3.amazonaws.com/ngrok.asc | sudo tee /etc/apt/trusted.gpg.d/ngrok.asc >/dev/null && echo "deb https://ngrok-agent.s3.amazonaws.com buster main" | sudo tee /etc/apt/sources.list.d/ngrok.list && sudo apt update && sudo apt install ngrok
    - name: run_ssh
      run: sudo service ssh start
    - name: run_tmate_cmd
      run: tmate -F
